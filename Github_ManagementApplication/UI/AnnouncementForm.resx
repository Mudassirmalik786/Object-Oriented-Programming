<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>